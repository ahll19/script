#! /usr/bin/python

from sys import argv
from os import path, listdir
from pathlib import Path
from subprocess import run
import datetime as dt


def parse_args(args: list[str]) -> str:
    if len(args) != 2:
        raise ValueError("Exactly one argument can be passed")

    inbox = args[1]

    if (not path.exists(inbox)) or (not path.isdir(inbox)):
        raise ValueError(f"{inbox} is not a valid directoroy in cwd")

    return inbox


def get_earliest_tiems(files: list[str]) -> list[dt.datetime]:
    times = []
    for file in files:
        min_time = min(path.getmtime(file), path.getctime(file))
        times.append(dt.datetime.fromtimestamp(min_time))

    return times


def move_files(files: list[str], times: list[dt.datetime]):
    q1 = "1-3"
    q2 = "4-6"
    q3 = "7-9"
    q4 = "10-12"
    n = len(files)
    assert len(times) == len(files)

    for i, (file, time) in enumerate(zip(files, times)):
        new_path = Path("organized_output")
        new_path /= str(time.year)
        if 1 <= time.month <= 3:
            new_path /= q1
        elif 4 <= time.month <= 6:
            new_path /= q2
        elif 7 <= time.month <= 9:
            new_path /= q3
        else:
            new_path /= q4
        new_path /= f"{time.month:02}-{time.day:02}"
        new_path.mkdir(parents=True, exist_ok=True)

        old_path = Path(file)
        new_path /= old_path.name

        print(f"{i+1:03} of {n:03}", end="\r")

        run(["mv", str(old_path), str(new_path)])


if __name__ == "__main__":
    inbox = parse_args(argv)
    files = [inbox + "/" + file for file in listdir(inbox)]
    times = get_earliest_tiems(files)
    move_files(files, times)
